-- VoxelPool.lua

local Workspace = game:GetService("Workspace")

local VoxelPool = {}
VoxelPool.StorageFolder = nil
VoxelPool.Voxels = {}

function VoxelPool:Initialize(poolSize, voxelSize, material, castShadow)
	self.StorageFolder = Instance.new("Folder")
	self.StorageFolder.Name = "VoxelStorage"
	self.StorageFolder.Parent = Workspace

	for i = 1, poolSize do
		local part = Instance.new("Part")
		part.Size = voxelSize
		part.Anchored = true
		part.Material = material
		part.CastShadow = castShadow
		part.CFrame = CFrame.new(0, -5000, 0) -- Hide far underground
		part.Parent = self.StorageFolder
		table.insert(self.Voxels, part)
	end

	print("✅ VoxelPool initialized with", poolSize, "voxels")
end

function VoxelPool:GetVoxel()
	if #self.Voxels == 0 then
		warn("⚠️ VoxelPool ran out! Creating emergency voxel.")
		local part = Instance.new("Part")
		part.Size = Vector3.new(10, 10, 10)
		part.Anchored = true
		part.Material = Enum.Material.Grass
		part.CastShadow = true
		part.Parent = Workspace
		return part
	end

	local voxel = table.remove(self.Voxels)
	return voxel
end

function VoxelPool:ReturnVoxel(voxel)
	voxel.Position = Vector3.new(0, -5000, 0)
	voxel.Parent = self.StorageFolder
	table.insert(self.Voxels, voxel)
end

return VoxelPool
